<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CleanCity</title>
    <link rel="stylesheet" href="/user.css">
</head>

<body>
    <%- include('./partials/nav.ejs') %>

    <div class="inline">
        <video id="video" autoplay></video>
        <button id="capture">Capture</button>
    </div>

    <div class="inline">
        <canvas id="canvas"></canvas>
    </div>

    <form action="/upload" method="post" id="uploadForm" enctype="multipart/form-data">
        <input type="file" name="image" id="imageInput" style="display: none;">
        <div>
            <h2>Write your complaint</h2>
            <input type="text" name="complain" id="complain" placeholder="Describe the litter here...">
        </div>
        <div>
            <h3>Address of litter with landmark</h3>
            <input type="text" name="address" id="address"
                placeholder="write the proper address of litter with landmark... ">
        </div>

        <div>
            <h3>Enter the Type of Waste: </h3>
            <select name="category" id="category">
                <option value="Electronic">Electronic</option>
                <option value="Dry">Dry</option>
                <option value="Wet">Wet</option>
                <option value="Glass">Glass</option>
                <option value="Plastic">Plastic</option>
                <option value="RadioActive">RadioActive</option>
            </select>
        </div>

        <div>
            <h3>Enter the Size of Waste: </h3>
            <select name="weight" id="weight">
                <option value="Under 1kg">Under 1kg</option>
                <option value="1-5kg">1-5kg</option>
                <option value="5-10kg">5-10kg</option>
                <option value="Above 10kg">Above 10kg</option>
            </select>
        </div>
        <button type="submit">Upload</button>
    </form>

    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureButton = document.getElementById('capture');
        const uploadForm = document.getElementById('uploadForm');
        const imageInput = document.getElementById('imageInput');
        const complainInput = document.getElementById('complain');
    
        // Detect if the device is a mobile device
        const isMobile = /iPhone|iPad|iPod|Android/i.test(navigator.userAgent);
    
        // Set constraints for the video stream
        const constraints = {
            video: isMobile ? { facingMode: { exact: "environment" } } : true
        };
    
        // Access the user's webcam or back camera
        navigator.mediaDevices.getUserMedia(constraints)
            .then(stream => {
                video.srcObject = stream;
            })
            .catch(err => {
                console.error("Error accessing camera: ", err);
            });
    
        // Capture the image from the video
        captureButton.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
            canvas.toBlob(blob => {
                const file = new File([blob], 'capture.png', { type: 'image/png' });
                const dataTransfer = new DataTransfer();
                dataTransfer.items.add(file);
                imageInput.files = dataTransfer.files;
            }, 'image/png');
        });
    
        // Handle the form submission
        uploadForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(uploadForm);
            const complainValue = complainInput.value.trim(); // Ensure complain is a string
            formData.append('complain', complainValue);
    
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(async (position) => {
                    const latitude = position.coords.latitude;
                    const longitude = position.coords.longitude;
                    
                    formData.append('location', JSON.stringify([{ latitude, longitude }]));
    
                    try {
                        const response = await fetch('/upload', {
                            method: 'POST',
                            body: formData
                        });
                        if (response.ok) {
                            const result = await response.json();
                            alert(result.message);
                        } else {
                            alert('Upload failed');
                        }
                    } catch (error) {
                        console.log('Error uploading file:', error);
                    }
                });
            } else {
                alert("Geolocation is not supported by this browser.");
            }
        });
    </script>
</body>

</html>